package mastermind;

import java.util.Scanner;

public class MasterMindFunctions
{
    Scanner console = new Scanner(System.in);

    public String[] secretCode;
    public int turnCount;
    public boolean isGameOver;
    public int difficult;

    public MasterMindFunctions()
    {
	this.turnCount = 0;
	this.isGameOver = false;
    }

    public void generateCode()
    {
	this.secretCode = generateSecretCode();
    }
    public void setDifficult() {
	System.out.println("Welke moeilijkheid wil je kiezen (easy, medium, hard, (extreme(klassement)");
	String inputDifficult = console.nextLine();
	if(inputDifficult.equals("easy")) {
	    this.difficult = 3;
	}
	else if(inputDifficult.equals("medium")) {
	    this.difficult = 4;
	}
	else if(inputDifficult.equals("hard")) {
	    this.difficult = 5;
	}
	else if(inputDifficult.equals("extreme")) {
	    System.out.println("je hebt extreme gekozen kies uit (Nightmare, Insane, Legendary)");
	    String inputExtreme = console.nextLine();
	    inputExtreme = inputExtreme.toLowerCase();
	    if(inputExtreme.equals("nightmare")) {
		this.difficult = 6;
	    }
	    else if(inputExtreme.equals("insane")) {
//		hier komt nog wat
	    }
//	    dit hieronder is de legendary input
	    else{
//		hier komt nog wat
	    }
	}
	
    }

    private String[] generateSecretCode()
    {
	String[] colors ={ "rood", "blauw", "groen", "paars", "geel", "oranje" };
	String[] code = new String[difficult];
	for (int i = 0; i < difficult; i++)
	{
	    code[i] = colors[(int) (Math.random() * colors.length)];
	}
	return code;
    }

    public String[] getUserInput()
    {
	Scanner console = new Scanner(System.in);
	System.out.println("Geef een code met een spatie ertussen de code kan meerdere keren dezelfde kleur hebben, bijvoorbeeld: rood rood rood rood ");
	System.out.println("Je hebt keuze uit rood, blauw, groen, paars, geel en oranje");
	System.out.println("De geheime code is: " + String.join(" ", secretCode)); // string join zet de elementen in										   // een string
//	System.out.println(secretCode);									   
	return console.nextLine().split(" ");
    }

    public boolean checkWin(String[] guessCode)
    {
	for (int i = 0; i < difficult; i++)
	{
	    if (!guessCode[i].equals(secretCode[i]))
	    {
		return false;
	    }
	}
	return true;
    }

    public void FirstFeedback(String[] guessCode)
    {
	int correctColorAndPosition = 0;
	boolean[] codeMatched = new boolean[difficult];
	boolean[] guessMatched = new boolean[difficult];

	for (int i = 0; i < difficult; i++)
	{
	    if (guessCode[i].equals(secretCode[i]))
	    {
		correctColorAndPosition++;
		codeMatched[i] = true;
		guessMatched[i] = true;
	    }
	}

	System.out.println("Juiste kleur en positie: " + correctColorAndPosition);
    }

    public void SecondFeedback(String[] guessCode)
    {	
	int correctColorWrongPosition = 0;
	boolean[] codeMatched = new boolean[difficult];
	boolean[] guessMatched = new boolean[difficult];

	for (int i = 0; i < difficult; i++)
	{
	    if (!guessMatched[i])//Controleert of deze kleur al is gematcht
	    {
		for (int j = 0; j < difficult; j++)
		{
		    if (!codeMatched[j] && guessCode[i].equals(secretCode[j]))
		    {
			correctColorWrongPosition++;
			codeMatched[j] = true;
		    }
		}
	    }
	}

	System.out.println("Juiste kleur maar foute positie: " + correctColorWrongPosition);
    }

    public void resetGame()
    {
	this.turnCount = 0;
	this.isGameOver = false;
	this.secretCode = generateSecretCode();
    }

    public void regels()
    {
	System.out.println("Dit zijn de regels:");
	System.out.println("je vult een viercijferige code in in woorden bijvoorbeeld rood blauw blauw oranje");
	System.out.println("je hebt keuze uit rood blauw groen paars geel oranje");
    }

//    public void clearScreen()
//    {
//        for (int i = 0; i < 50; ++i) {
//            System.out.println();
//        }
//    }
}